import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

data = {
    "CustomerID": range(1, 21),
    "Age": [19, 21, 20, 23, 31, 35, 40, 42, 50, 55, 60, 23, 21, 33, 45, 38, 46, 59, 29, 41],
    "Annual_Income": [15, 16, 17, 18, 19, 35, 40, 42, 50, 55, 60, 23, 22, 35, 48, 49, 55, 68, 30, 39],  # In thousands
    "Spending_Score": [39, 81, 6, 77, 40, 66, 50, 42, 80, 60, 70, 90, 85, 55, 65, 75, 72, 35, 48, 67],  # Arbitrary scale
}
df = pd.DataFrame(data)

x = df[["Annual_Income","Spending_Score"]]

scaler = StandardScaler()
X_Scaled = scaler.fit_transform(x)

inertia = []
for k in range(1,11):
  kmeans = KMeans(n_clusters=k, random_state=42, n_init=10)
  kmeans.fit(X_Scaled)
  inertia.append(kmeans.inertia_)

plt.figure(figsize = (8,5))
plt.plot(range(1,11), inertia,marker="o", linestyle = "--")
plt.title("Elbow Method")
plt.xlabel("Number of Clusters")
plt.ylabel("Inertia")
plt.show()


kmeans = KMeans(n_clusters=4, random_state=42, n_init=10)
kmeans.fit(X_Scaled)


df["Cluster"] = kmeans.fit_predict(X_Scaled)
plt.figure(figsize=(8,6))
plt.scatter(x=df["Annual_Income"], y=df["Spending_Score"], c=df["Cluster"], cmap="Set1", s=100)
plt.title("Customer Segmentation")
plt.xlabel("Annual Income in[$1000]")
plt.ylabel("Spending Score")
plt.legend(title = "Cluster")
plt.show()
print(df)
